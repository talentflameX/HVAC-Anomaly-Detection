# HVAC Anomaly Detection and Failure Prediction

## 📌 Project Overview
This project focuses on **real-time anomaly detection** for HVAC (Heating, Ventilation, and Air Conditioning) systems. It monitors sensor data, detects anomalies, predicts potential failures, and provides actionable maintenance alerts using machine learning.

## 🚀 Features
- **Data Ingestion**: Collects real-time sensor data such as temperature, humidity, CO2 levels, and energy consumption.
- **Anomaly Detection**: Uses Isolation Forest to identify abnormal energy consumption and pressure spikes.
- **Failure Prediction**: Predicts possible HVAC failures based on historical data.
- **Actionable Insights**: Provides maintenance recommendations (e.g., "Inspect compressor within 5 days").
- **Interactive Dashboard**: Visualizes sensor data and alerts maintenance teams in real-time.

## 🛠️ Technologies Used
- **Python** for data processing and ML modeling
- **Pandas & NumPy** for data manipulation
- **Scikit-learn** for anomaly detection (Isolation Forest)
- **Gradio** for the interactive web-based dashboard
- **Matplotlib & Plotly** for visualizing trends

## 📊 Dataset Details
The dataset includes:
- **Date** (timestamp)
- **on_off** (0/1 status of HVAC system)
- **active_energy** (energy consumed by the HVAC unit)
- **high_pressure_1, high_pressure_2** (sensor readings)
- **CO2 levels & humidity** (environmental data)
- **Anomaly label** (Normal/Anomaly, determined by the ML model)

## 🔍 How It Works
1. **Preprocessing:** Cleans and normalizes sensor data.
2. **Anomaly Detection:** Trains Isolation Forest to flag unusual sensor readings.
3. **Failure Prediction:** Estimates potential breakdowns based on anomaly trends.
4. **Dashboard Interface:** Displays alerts and sensor graphs in real-time.

## 🎯 How to Run the Project
### 1️⃣ Install Dependencies
```bash
pip install pandas numpy scikit-learn gradio plotly matplotlib
```
### 2️⃣ Run the Dashboard
```bash
python app.py
```
### 3️⃣ View the Dashboard
- Open the link generated by Gradio to interact with the anomaly detection system.

## 📌 Future Enhancements
- Use **LSTMs or Autoencoders** for improved failure prediction.
- Integrate with **IoT cloud platforms** for live streaming sensor data.
- Expand system to support **multiple HVAC units** and real-time alerts.

## 🤝 Contributing
Feel free to fork this repository and contribute by raising pull requests!

## 📜 License
This project is open-source under the **MIT License**.
